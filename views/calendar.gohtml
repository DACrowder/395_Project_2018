<!DOCTYPE html>  
<html lang="en">  
  <head>
    <!-- fullCalendar dependencies -->
    <link rel='stylesheet' type='text/css' href='/views/fullcalendar/fullcalendar.css'/>
    <script type="text/javascript" src='/views/fullcalendar/lib/jquery.min.js'></script>
    <script type="text/javascript" src='/views/fullcalendar/lib/moment.min.js'></script>
    <script type="text/javascript" src='/views/fullcalendar/fullcalendar.js'></script>
    <link rel="stylesheet" type='text/css' href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <script type="text/javascript">
        $(document).ready(function() {
            // page is now ready, initialize the calendar...
            $('#calendar').fullCalendar({
                weekends: false,
                header: {
                    left: 'today',
                    center: 'prev, title, next',
                    right: 'agendaWeek, month'
                },
                events: "/api/v1/events",    // link to events (bookings + blocks feed)
                allDayDefault: false,        // blocks are not all-day unless specified
                themeSystem: "bootstrap3",
                editable: true,                 // Need to use templating engine to change bool based on user's role
                // DOM-Event handling for Calendar Eventblocks (why do js people suck at naming)
                eventOverlap: function(stillEvent, movingEvent) {      // Event blocks in different rooms may overlap, events in same room may not
                    // Note: events may overlap on import; moving events will not be allowed to over lap
                    //       That is, we must constrain the overlap when we make event creation possible
                    if (stillEvent.color === movingEvent.color) {
                        return false;
                    }
                    return true;
                },
                // When an event is resized (post duration change) it will callback the function
                // revertFunc is fullCalendar function which reverts the display should the request fail
                eventResize: function(event, delta, revertFunc, jsEvent, ui, view) {
                    // Extract block data required for updating on server
                    event_json = JSON.stringify({
                       id: event.id,
                       start: event.start,
                       end:   event.end
                    });
                    // Make ajax post request with updated event data
                    $.ajax({
                        url: '/api/v1/events',
                        type: 'POST',
                        contentType:'json',
                        data: event_json,
                        dataType:'json',
                        success: function(data) { 
                            alert("Event updated successfully!");
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            revertFunc();
                            alert("Request failed: " + xhr + "\n" + thrownError);
                        }
                    });
                 }
            })
        });
    </script>
  </head>
  <body>
    <div id="calendar"></div>
  </body>
</html>